doctype html
html
	include csvFilesMixin.pug
	head
		meta( charset='UTF-8')
		meta( name='viewport', content='maximum-scale=1,width=device-width,initial-scale=1,user-scalable=0')
		title Barnes Collection Scripts Dashboard
		link(href="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.3.7/css/bootstrap.min.css", rel="stylesheet")
		link( href="https://cdnjs.cloudflare.com/ajax/libs/datatables/1.10.13/css/dataTables.bootstrap.css", rel="stylesheet")
		script(src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.1.1/jquery.min.js")
		script(src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.17.1/moment.min.js")
		script(src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/1.7.3/socket.io.min.js")
	body
		h1 Dashboard
		section
			div.panel.panel-default
				div.panel-heading
					h2.panel-title TMS to CSV Exporter
				div.panel-body
					p
						span Script last ran: 
						span#lastRan= moment(info.startTime).toString()
					p
						span Script last completed: 
						span#lastCompleted= moment(info.completeTime).toString()
					p
						span Script running: 
						span#active= info.active
					p
						span Progress: 
						span#progress= `${info.progress.processed} of ${info.progress.total} objects processed`
					p
						span Listening for updates on port: 
						span#port= info.updatePort
					button#run Run Script
					button#cancel Cancel Script
		section
			div.panel.panel-default
				div.panel-heading
					h2.panel-title Exported CSV files
				div#csvFilesPanelBody.panel-body
					+csvFilesMixin(list, desc)
		section
			div.panel.panel-default
				div.panel-heading
					h2.panel-title Elasticsearch
				div.panel-body
					div.row
						div.col-lg-6
							text#es_status= `ES synchronized with ${desc.lastImportedCSV}`
					div.row
						div.col-lg-6
							div.input-group
								input#query.form-control(type="text" name="es_query" placeholder="Search for...")
								span.input-group-btn
									button#query_button.btn.btn-default(type="button") Search
						div.col-lg-6
							a(href="/app/kibana") View on Kibana
					div.row
						div.col-lg-12
							text#search_results
		section
			div.panel.panel-default
				div.panel-heading
					h2.panel-title IIIF Image Processing
				div.panel-body
					p
						span Listening for updates on port: 
						span#image-port= imageInfo.updatePort
					button#run-images Run
					p
						span Processing images: 
						span#images-running
					p
						span Progress: 
						span#images-progress
					p 
						span Images Tiled: 
						span#images-tiled= 0
						span , Total Objects: 
						span#images-total-objects= info.progress.total 

	script.
		$(function() {

			function createUpdateSocket(port) {
				var socket = io(window.location.protocol + "//" + window.location.hostname + ":" + port);
				return socket;
			}

			var lastCSVData = {
				active: null,
				csv: null,
				status: null
			};

			function fetchCSVFileInfo() {
				$.ajax("./csvFiles").done(function(data) {
					$("#csvFilesPanelBody").empty();
					$("#csvFilesPanelBody").append(data);
				});

				console.log("Fetching fresh CSV data");
				if (lastCSVData.active) setTimeout(fetchCSVFileInfo, 5000);
			}

			var socket = createUpdateSocket(parseInt($('#port').text()));
			socket.on('status', function(data){
				$("#active").text(`${data.active}`);
				$("#progress").text(`${data.processed} of ${data.total} objects processed`);
				$("#images-total-object").text(data.total);

				var needsFetch = false;
				needsFetch |= (data.active !== lastCSVData.active && data.active);
				needsFetch |= (data.status !== lastCSVData.status);

				lastCSVData.active = data.active;
				lastCSVData.csv = data.csv;
				lastCSVData.status = data.status;

				if (needsFetch) fetchCSVFileInfo();
			});

			var imageSocket = createUpdateSocket(parseInt($('#image-port').text()));
			imageSocket.on('status', function(data) {
				$("#images-running").text(data.isRunning);
				$("#images-progress").text(`${data.numImagesUploaded} of ${data.totalImagesToUpload} images processed.`);
				$("#images-tiled").text(data.numTiledImages);
			});

			function doSearchQuery() {
				var query = $("#query")[0].value;
				var port = 9200;
				console.log("Searching for: " + query);
				$.get(window.location.protocol + "//" + window.location.hostname + ":" + port + "/_search?pretty&q=" + query, updateSearchResults);
			}

			function updateSearchResults(data) {
				$("#search_results").text(JSON.stringify(data));
			}

			$("#run").click(function() {
				$.get('api/tmstocsv/run', function(response) {
					$("#test").text(response.time);
				});
			});

			$("#run-images").click(function() {
				$.get('api/images/tile', function(response) {
					
				});
			});

			$("#cancel").click(function() {
				$.get('api/tmstocsv/cancel');
			});

			$("#query_button").click(doSearchQuery);

			$("#query").keypress(function(e, a) {
				if (e.which == 13) {
					doSearchQuery();
					return false;    //<---- Add this line
				}
			});
		});